@page "/advertisements"
@using Fluxor
@using Fennec.Client.Store.GetAdvertisements
@using Fennec.Client.Store.LoginUseCase
@using Fennec.Contracts
@inject HttpClient Http
@inject NavigationManager NavigationManager
@if (_ads is null)
{
    <h3>
        Fetching...
    </h3>
}
else if (!_ads.Any())
{
    <h3>
        No advertisements found.
    </h3>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ad in _ads)
            {
                var a = ad;
                <tr @onclick="() => ViewSingleAdvertisement(ad)">
                    <td>
                        @ad.Name
                    </td>
                    <td>@ad.PricePerView</td>
                </tr>
            }
        </tbody>


    </table>
    <button @onclick="CreateNewAdvertisement" type="button" class="btn btn-primary btn-lg btn-block">Create new advertisement</button>
}

@code {
    [Inject]
    public IState<LoginState> LoginState { get; set; }
    private IEnumerable<AdvertisementDto> _ads;

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetFromJsonAsync<IEnumerable<AdvertisementDto>>("/advertisers");
        _ads = response;
    }

    public void ViewSingleAdvertisement(AdvertisementDto advertisement)
    {
        NavigationManager.NavigateTo($"{Guid.NewGuid()}/advertisements/{advertisement.Id}");
    }


    public void CreateNewAdvertisement()
    {
        NavigationManager.NavigateTo("/create-new-ad");
    }
}